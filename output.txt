

Analysis of MERFISH data by Warped Sigmoid, Poisson-Process Mixed-Effects Model (WSPmm)
: 

Loading helper function definitions for preprocessing MERFISH data... 

Loading raw data: 
----------------------------------------

Found 4 HDF5 files.... 
File names:
	mouse 1: /Users/michaelbarkasi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/projects_Oviedo_lab/MERFISH/data_SSp//Somatosensory_ACxDev1_CBA-CAJ_FFPE_P12_z0-3_celltyped_filtered_withCCF.hdf5
	mouse 2: /Users/michaelbarkasi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/projects_Oviedo_lab/MERFISH/data_SSp//Somatosensory_ACxDev1_CBA-CAJ_FFPE_P18_celltyped_filtered_withCCF.hdf5
	mouse 3: /Users/michaelbarkasi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/projects_Oviedo_lab/MERFISH/data_SSp//Somatosensory_ACxDev1_CBA-CAJ_P12_celltyped_filtered_withCCF.hdf5
	mouse 4: /Users/michaelbarkasi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/projects_Oviedo_lab/MERFISH/data_SSp//Somatosensory_ACxDev1_CBA-CAJ_P18_celltyped_filtered_withCCF.hdf5
Loading and parsing file for mouse number: 1, 2, 3, 4 

Mean transcript counts per cell for each mouse: 2.84, 3.269, 1.755, 1.977
Mean of means: 2.46
Standard deviation of means: 0.714

Total cells by type (Map My Cells):
------------------------------

      Astro-Epen          CB GABA          CB Glut     CNU-HYa GABA     CNU-HYa Glut     CNU-LGE GABA     CNU-MGE GABA CTX-CGE/MGE GABA      DG-IMN Glut 
            3952               82               19               12                2              671               20             1351               11 
        filtered          HY GABA           Immune       IT-ET Glut         LSX GABA          MB GABA          MB Glut       MB-HB Sero       MH-LH Glut 
           18208               37              331            16066               29               79                5                1               15 
         MY GABA          MY Glut   NP-CT-L6b Glut      OB-IMN GABA              OEC        OPC-Oligo           P GABA  TSCRPT_filtered         Vascular 
             430               21             4922              149               23             1499              142               99             5914 
         HY Glut    HY Gnrh1 Glut           P Glut      Pineal Glut          TH Glut          MB Dopa       OB-CR Glut 
               1                1                2                5               12                2                3 
----

Number of mice: 4
Cells per mouse: 13237, 16954, 10444, 13481
Means cells per mouse: 13529
Total cells: 54116

Transforming raw data into laminar and columnar coordinates: 
----------------------------------------

Mouse number 1: 
Performing coordinate transform... 
Grabbing coordinates and defining layers and hemispheres... 
Step 1, centering each patch around the mean point of L5... 
Step 2, rotating each patch so that L4 aligns with the x-axis with anterior in positive y direction... 
Step 3, modeling and flattening laminar curve based on L4... 
Step 4, linearly transforming each patch to vertically straighten them while preserving area... 
Binning transformed coordinates... 
Smoothing bin edges with nonlinear transformation... 
Estimating layer boundaries... 

Mouse number 2: 
Performing coordinate transform... 
Grabbing coordinates and defining layers and hemispheres... 
Step 1, centering each patch around the mean point of L5... 
Step 2, rotating each patch so that L4 aligns with the x-axis with anterior in positive y direction... 
Step 3, modeling and flattening laminar curve based on L4... 
Step 4, linearly transforming each patch to vertically straighten them while preserving area... 
Binning transformed coordinates... 
Smoothing bin edges with nonlinear transformation... 
Estimating layer boundaries... 

Mouse number 3: 
Performing coordinate transform... 
Grabbing coordinates and defining layers and hemispheres... 
Step 1, centering each patch around the mean point of L5... 
Step 2, rotating each patch so that L4 aligns with the x-axis with anterior in positive y direction... 
Step 3, modeling and flattening laminar curve based on L4... 
Step 4, linearly transforming each patch to vertically straighten them while preserving area... 
Binning transformed coordinates... 
Smoothing bin edges with nonlinear transformation... 
Estimating layer boundaries... 

Mouse number 4: 
Performing coordinate transform... 
Grabbing coordinates and defining layers and hemispheres... 
Step 1, centering each patch around the mean point of L5... 
Step 2, rotating each patch so that L4 aligns with the x-axis with anterior in positive y direction... 
Step 3, modeling and flattening laminar curve based on L4... 
Step 4, linearly transforming each patch to vertically straighten them while preserving area... 
Binning transformed coordinates... 
Smoothing bin edges with nonlinear transformation... 
Estimating layer boundaries... 

Initializing Cpp (wspc) model: 
----------------------------------------

warp_precision: 1e-07
eps_: 2.22045e-16
inf_warp: 4.5036e+08
Data structure check passed
Saving tokenized count
Found max bin: 100.000000
Extracted fixed effects:
"hemisphere" "age"
Ref levels:
"left" "12"
Created treatment levels
"ref" "right" "18" "right18"
Created treatment-to-fix translation matrix
Pre-computed weight matrix rows
Extracted parent grouping variables:
"cortex"
Extracted child grouping variables:
"Bcl11b" "Cux2" "Fezf2" "Nxph3" "Rorb" "Satb2"
Extracted random-effect grouping variables:
"none" "1" "2" "3" "4"
Extracted tokenized count columns
Grabbed size constants for summed count data, total rows: 12000
Initialized columns for summed count data
Initialized count indexes, number of rows with unique model components: 120
Pre-computing bin masks
Creating summed-count data columns ...
Random level 0, 1/5 complete
Random level 1, 2/5 complete
Random level 2, 3/5 complete
Random level 3, 4/5 complete
Random level 4, 5/5 complete
Extracted non-NA indexes
Making extrapolation pool ...
row: 480/2400
row: 960/2400
row: 1440/2400
row: 1920/2400
row: 2400/2400
Extrapolated 'none' rows
Took log of observed counts
Estimated change points with LROcp and found initial parameter estimates for fixed-effect treatments
Built initial beta (ref and fixed-effects) matrices
Initialized random effect warping factors
Made and mapped parameter vector
Number of parameters: 276
Constructed grouping variable IDs
Computed size of boundary vector: 840
Finished initializing wspc object

Estimating model parameters: 
---------------

Running MCMC stimulations (single-threaded): 
Checking feasibility of provided parameters
... tpoints found below buffer
Provided parameters not feasible, searching nearby
Initial boundary distance (want to make >0): -4.3348
Numer of evals: 12
Success code: 2
Final boundary distance: 0.247647
Nearby feasible parameters found!
Performing initial fit of full data
Penalized neg_loglik: 12673.1
step: 100/1000
step: 200/1000
step: 300/1000
step: 400/1000
step: 500/1000
step: 600/1000
step: 700/1000
step: 800/1000
step: 900/1000
All complete!
Acceptance rate (aim for 0.2-0.3): 0.494071

Setting full-data fit as parameters... 
Checking feasibility of provided parameters
... no tpoints below buffer
... no negative rates predicted
Provided parameters are feasible

Running stats on simulation results: 
----------------------------------------

Grabbing sample results... 
Grabbing parameter values... 
Computing 95% confidence intervals... 
Estimating p-values from resampled parameters... 

Recommended resample size for alpha = 0.05, 261 tests: 
with bootstrapping: 5220
with MCMC: 52200
Actual resample size: 1001

Stat summary (head only):
------------------------------
                                 parameter   estimate      CI.low     CI.high p.value p.value.adj    alpha.adj significance
1       baseline_cortex_Rt_Bcl11b_Tns/Blk1  3.9277773  3.53404765  4.14920385       0           0 0.0001915709          ***
2   beta_Rt_cortex_Bcl11b_right_X_Tns/Blk1 -0.1577221 -0.26617524 -0.07495474       0           0 0.0001923077          ***
3      beta_Rt_cortex_Bcl11b_18_X_Tns/Blk1  0.5035040  0.30893481  0.60484746       0           0 0.0001930502          ***
4 beta_Rt_cortex_Bcl11b_right18_X_Tns/Blk1  0.3765727  0.09917292  0.36790288       0           0 0.0001937984          ***
5       baseline_cortex_Rt_Bcl11b_Tns/Blk2  3.3400481  2.98729266  3.46296137       0           0 0.0001945525          ***
6   beta_Rt_cortex_Bcl11b_right_X_Tns/Blk2  0.3126653  0.17010274  0.48733604       0           0 0.0001953125          ***
----

Analyzing residuals: 
----------------------------------------

Computing residuals... 
Making masks... 
Making plots and saving stats... 

Log-residual summary by grouping variables (head only):
------------------------------
         group      mean        sd  variance
1          all 0.3603569 0.5657301 0.3200506
2 ran_lvl_none 0.3382893 0.4443713 0.1974659
3    ran_lvl_1 0.3454817 0.6182639 0.3822502
4    ran_lvl_2 0.3018531 0.5764787 0.3323277
5    ran_lvl_3 0.4912256 0.6646429 0.4417501
6    ran_lvl_4 0.3470026 0.5901462 0.3482725
----

TPS test results (head only):
------------------------------
              cortex   gene TPS.ref TPS.right TPS.18 TPS.right18 Rt.18 tpoint.18 tslope.18 Rt.right tpoint.right tslope.right Rt.right18 tpoint.right18
Bcl11b.cortex cortex Bcl11b    TRUE      TRUE   TRUE        TRUE  TRUE      TRUE      TRUE     TRUE         TRUE         TRUE       TRUE           TRUE
Cux2.cortex   cortex   Cux2    TRUE      TRUE   TRUE       FALSE  TRUE     FALSE      TRUE     TRUE         TRUE         TRUE       TRUE           TRUE
Fezf2.cortex  cortex  Fezf2    TRUE      TRUE   TRUE        TRUE  TRUE      TRUE      TRUE    FALSE         TRUE         TRUE       TRUE           TRUE
Nxph3.cortex  cortex  Nxph3    TRUE      TRUE   TRUE       FALSE  TRUE      TRUE      TRUE     TRUE         TRUE         TRUE       TRUE           TRUE
Rorb.cortex   cortex   Rorb    TRUE      TRUE   TRUE        TRUE  TRUE      TRUE      TRUE     TRUE         TRUE        FALSE       TRUE           TRUE
Satb2.cortex  cortex  Satb2    TRUE     FALSE  FALSE       FALSE  TRUE      TRUE      TRUE     TRUE         TRUE         TRUE       TRUE           TRUE
              tslope.right18
Bcl11b.cortex           TRUE
Cux2.cortex             TRUE
Fezf2.cortex            TRUE
Nxph3.cortex            TRUE
Rorb.cortex             TRUE
Satb2.cortex            TRUE
----

Printing effect distributions: 
----------------------------------------

Warping factors distributions... 
Rate effects distribution... 
Slope effects distribution... 
tpoint effects distribution... 
Making rate-count plots... 

Printing child summary plots: 
----------------------------------------

Making summary plots for cortex: Bcl11b, Cux2, Fezf2, Nxph3, Rorb, Satb2
Enter a frame number, or 0 to exit   

1: demo_warp2()
2: #72: seq(0, 100, length.out = n)
3: seq.default(0, 100, length.out = n)


Enter a frame number, or 0 to exit   

 1: demo_warp2()
 2: #216: grid.arrange(demo_plot_warpfunction, demo_plot_warpedsigmoid, ncol = 1)
 3: arrangeGrob(...)
 4: lapply(grobs[toconv], ggplot2::ggplotGrob)
 5: FUN(X[[i]], ...)
 6: ggplot_gtable(ggplot_build(x))
 7: ggplot_gtable.ggplot_built(ggplot_build(x))
 8: by_layer(function(l, d) l$draw_geom(d, layout), plot$layers, data, "converting geom to grob")
 9: try_fetch(for (i in seq_along(data)) {
    out[[i]] <- f(l = layers[[i]], d = data[[i]])
}, error = function(cnd) {
    cli::cli_abort(c("Problem while
10: tryCatch(withCallingHandlers(expr, condition = function(cnd) {
    {
        .__handler_frame__. <- TRUE
        .__setup_frame__. <- frame
        if (
11: tryCatchList(expr, classes, parentenv, handlers)
12: tryCatchOne(expr, names, parentenv, handlers[[1]])
13: doTryCatch(return(expr), name, parentenv, handler)
14: withCallingHandlers(expr, condition = function(cnd) {
    {
        .__handler_frame__. <- TRUE
        .__setup_frame__. <- frame
        if (inherits(
15: f(l = layers[[i]], d = data[[i]])
16: l$draw_geom(d, layout)
17: draw_geom(..., self = self)
18: self$geom$handle_na(data, self$computed_geom_params)
19: handle_na(..., self = self)
20: remove_missing(data, params$na.rm, c(self$required_aes, self$non_missing_aes), snake_class(self))
21: detect_missing(df, vars, finite)
22: cases(df[, vars, drop = FALSE], if (finite) is_finite else is_complete)
23: vapply(x, fun, logical(nrow(x)))
24: FUN(X[[i]], ...)
25: .signalSimpleWarning("is.na() applied to non-(list or vector) of type 'expression'", base::quote(is.na(x)))
26: withRestarts({
    .Internal(.signalCondition(simpleWarning(msg, call), msg, call))
    .Internal(.dfltWarn(msg, call))
}, muffleWarning = function() N
27: withOneRestart(expr, restarts[[1]])
28: doWithOneRestart(return(expr), restart)
29: .handleSimpleError(function (cnd) 
{
    {
        .__handler_frame__. <- TRUE
        .__setup_frame__. <- frame
        if (inherits(cnd, "message")) {

30: h(simpleError(msg, call))
31: handlers[[1]](cnd)
32: cli::cli_abort(c("Problem while {step}.", i = "Error occurred in the {ordinal(i)} layer."), call = layers[[i]]$constructor, parent = cnd)
33: rlang::abort(message, ..., call = call, use_cli_format = TRUE, .frame = .frame)
34: signal_abort(cnd, .file)

function (..., newpage = TRUE) 
{
    if (newpage) 
        grid.newpage()
    g <- arrangeGrob(...)
    grid.draw(g)
    invisible(g)
}
<bytecode: 0x12dbb34d8>
<environment: namespace:gridExtra>

Enter a frame number, or 0 to exit   

 1: demo_warp2()
 2: #216: grid.arrange(demo_plot_warpfunction, demo_plot_warpedsigmoid, ncol = 1)
 3: arrangeGrob(...)
 4: lapply(grobs[toconv], ggplot2::ggplotGrob)
 5: FUN(X[[i]], ...)
 6: ggplot_gtable(ggplot_build(x))
 7: ggplot_gtable.ggplot_built(ggplot_build(x))
 8: by_layer(function(l, d) l$draw_geom(d, layout), plot$layers, data, "converting geom to grob")
 9: try_fetch(for (i in seq_along(data)) {
    out[[i]] <- f(l = layers[[i]], d = data[[i]])
}, error = function(cnd) {
    cli::cli_abort(c("Problem while
10: tryCatch(withCallingHandlers(expr, condition = function(cnd) {
    {
        .__handler_frame__. <- TRUE
        .__setup_frame__. <- frame
        if (
11: tryCatchList(expr, classes, parentenv, handlers)
12: tryCatchOne(expr, names, parentenv, handlers[[1]])
13: doTryCatch(return(expr), name, parentenv, handler)
14: withCallingHandlers(expr, condition = function(cnd) {
    {
        .__handler_frame__. <- TRUE
        .__setup_frame__. <- frame
        if (inherits(
15: f(l = layers[[i]], d = data[[i]])
16: l$draw_geom(d, layout)
17: draw_geom(..., self = self)
18: self$geom$draw_layer(data, self$computed_geom_params, layout, layout$coord)
19: draw_layer(..., self = self)
20: lapply(data_panels, function(data) {
    if (empty(data)) 
        return(zeroGrob())
    panel_params <- layout$panel_params[[data$PANEL[1]]]
    injec
21: FUN(X[[i]], ...)
22: inject(self$draw_panel(data, panel_params, coord, !!!params))
23: self$draw_panel(data, panel_params, coord, na.rm = FALSE)
24: draw_panel(..., self = self)
25: polylineGrob(munched$x, munched$y, id = id, default.units = "native", arrow = arrow, gp = gpar(col = alpha(munched$colour, munched$alpha)[start], fi
26: grob(x = x, y = y, id = id, id.lengths = id.lengths, arrow = arrow, name = name, gp = gp, vp = vp, cl = "polyline")
27: gpar(col = alpha(munched$colour, munched$alpha)[start], fill = alpha(munched$colour, munched$alpha)[start], lwd = munched$linewidth[start] * .pt, lt
28: validGP(list(...))
29: numnotnull("fontsize")
30: alpha(munched$colour, munched$alpha)
31: farver::decode_colour(colour, alpha = TRUE)
32: decode_c(colour, alpha, colourspace_match(to), white, na_value)
33: .handleSimpleError(function (cnd) 
{
    {
        .__handler_frame__. <- TRUE
        .__setup_frame__. <- frame
        if (inherits(cnd, "message")) {

34: h(simpleError(msg, call))
35: handlers[[1]](cnd)
36: cli::cli_abort(c("Problem while {step}.", i = "Error occurred in the {ordinal(i)} layer."), call = layers[[i]]$constructor, parent = cnd)
37: rlang::abort(message, ..., call = call, use_cli_format = TRUE, .frame = .frame)
38: signal_abort(cnd, .file)

Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit
Enter an item from the menu, or 0 to exit

Enter a frame number, or 0 to exit   

1: demo_warp2()
2: #180: geom_line(aes(x = x, y = y), linewidth = 1.5, color = type)
3: layer(data = data, mapping = mapping, stat = stat, geom = GeomLine, position = position, show.legend = show.legend, inherit.aes = inherit.aes, param
4: list2(na.rm = na.rm, orientation = orientation, ...)

