

Analysis of MERFISH data by Warped Sigmoid, Poisson-Process Mixed-Effects Model (WSPmm)
: 

Loading helper function definitions for preprocessing MERFISH data... 
Setting flag to remove Layer 1 from the analysis... 

Loading raw data: 
----------------------------------------

Found 4 HDF5 files.... 
File names:
	mouse 1: /Users/michaelbarkasi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/projects_Oviedo_lab/MERFISH/data//ACxDev1_CBA-CAJ_FFPE_P12_celltyped_filtered_withCCF.hdf5
	mouse 2: /Users/michaelbarkasi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/projects_Oviedo_lab/MERFISH/data//ACxDev1_CBA-CAJ_FFPE_P18_celltyped_filtered_withCCF.hdf5
	mouse 3: /Users/michaelbarkasi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/projects_Oviedo_lab/MERFISH/data//ACxDev1_CBA-CAJ_P12_celltyped_filtered_withCCF.hdf5
	mouse 4: /Users/michaelbarkasi/Library/CloudStorage/OneDrive-WashingtonUniversityinSt.Louis/projects_Oviedo_lab/MERFISH/data//ACxDev1_CBA-CAJ_P18_celltyped_filtered_withCCF.hdf5
Loading and parsing file for mouse number: 1, 2, 3, 4 

Mean transcript counts per cell for each mouse: 1.873, 1.902, 0.897, 1.216
Mean of means: 1.472
Standard deviation of means: 0.497

Total cells by type (Map My Cells):
------------------------------

      Astro-Epen          CB GABA     CNU-HYa GABA CTX-CGE/MGE GABA 
            1249               25               12              663 
        filtered          HY GABA           Immune       IT-ET Glut 
            6989               14              122             7545 
        LSX GABA          MB GABA       MH-LH Glut          MY GABA 
              12               18                9              206 
  NP-CT-L6b Glut      OB-IMN GABA              OEC        OPC-Oligo 
            1423               49               16              244 
          P GABA         Vascular          CB Glut     CNU-LGE GABA 
              69             2015               19                4 
     DG-IMN Glut          MY Glut       OB-CR Glut          TH Glut 
               7                2                0                1 
    CNU-HYa Glut     CNU-MGE GABA    HY Gnrh1 Glut          MB Dopa 
               1                6                2                2 
          P Glut      Pineal Glut       MB-HB Sero 
               2                5                1 
----

Number of mice: 4
Cells per mouse: 5024, 5759, 4514, 5435
Means cells per mouse: 5183
Total cells: 20732

Transforming raw data into laminar and columnar coordinates: 
----------------------------------------

Mouse number 1: 
Performing coordinate transform... 
Grabbing coordinates and defining layers and hemispheres... 
Step 1, correcting perspective to ensure right hemisphere is on the right... 
Step 2, centering each patch around the mean point of L5... 
Step 3, rotating each patch so that L4 aligns with the x-axis and L1 (or L23, if L1 removed) is on top... 
Step 4, linearly transforming each patch to vertically straighten them while preserving area... 
Step 5, leveling all layers... 
Binning transformed coordinates... 
Smoothing bin edges with nonlinear transformation... 
Estimating layer boundaries... 

Mouse number 2: 
Performing coordinate transform... 
Grabbing coordinates and defining layers and hemispheres... 
Step 1, correcting perspective to ensure right hemisphere is on the right... 
Step 2, centering each patch around the mean point of L5... 
Step 3, rotating each patch so that L4 aligns with the x-axis and L1 (or L23, if L1 removed) is on top... 
Step 4, linearly transforming each patch to vertically straighten them while preserving area... 
Step 5, leveling all layers... 
Binning transformed coordinates... 
Smoothing bin edges with nonlinear transformation... 
Estimating layer boundaries... 

Mouse number 3: 
Performing coordinate transform... 
Grabbing coordinates and defining layers and hemispheres... 
Step 1, correcting perspective to ensure right hemisphere is on the right... 
Step 2, centering each patch around the mean point of L5... 
Step 3, rotating each patch so that L4 aligns with the x-axis and L1 (or L23, if L1 removed) is on top... 
Step 4, linearly transforming each patch to vertically straighten them while preserving area... 
Step 5, leveling all layers... 
Binning transformed coordinates... 
Smoothing bin edges with nonlinear transformation... 
Estimating layer boundaries... 

Mouse number 4: 
Performing coordinate transform... 
Grabbing coordinates and defining layers and hemispheres... 
Step 1, correcting perspective to ensure right hemisphere is on the right... 
Step 2, centering each patch around the mean point of L5... 
Step 3, rotating each patch so that L4 aligns with the x-axis and L1 (or L23, if L1 removed) is on top... 
Step 4, linearly transforming each patch to vertically straighten them while preserving area... 
Step 5, leveling all layers... 
Binning transformed coordinates... 
Smoothing bin edges with nonlinear transformation... 
Estimating layer boundaries... 

Initializing Cpp (wspc) model: 
----------------------------------------

Data structure check passed
Saving tokenized count
Found max bin: 100.000000
Extracted fixed effects:
"hemisphere" "age"
Ref levels:
"left" "12"
Created treatment levels
"ref" "right" "18" "right18"
Created treatment-to-fix translation matrix
Pre-computed weight matrix rows
Extracted parent grouping variables:
"cortex"
Extracted child grouping variables:
"Arc" "Bcl11b" "Camk2a" "Dlx2" "Fezf2" "Grin2a" "Ncdn" "Nptxr" "Nr4a2" "Rorb" "Satb2"
Extracted random-effect grouping variables:
"none" "1" "2" "3" "4"
Extracted tokenized count columns
Grabbed size constants for summed count data, total rows: 22000
Initialized columns for summed count data
Initialized count indexes, number of rows with unique model components: 220
Pre-computing bin masks
Creating summed-count data columns ...
Random level 0, 1/5 complete
Random level 1, 2/5 complete
Random level 2, 3/5 complete
Random level 3, 4/5 complete
Random level 4, 5/5 complete
Extracted non-NA indexes
Making extrapolation pool ...
row: 440/4400
row: 880/4400
row: 1320/4400
row: 1760/4400
row: 2200/4400
row: 2640/4400
row: 3080/4400
row: 3520/4400
row: 3960/4400
row: 4390/4400
Extrapolated 'none' rows
Took log of observed counts
Found mean observed ran effect per ran level
Estimated change points with LROcp and found initial parameter estimates for fixed-effect treatments
Built initial beta (ref and fixed-effects) matrices
Initialized random effect warping factors
Made and mapped parameter vector
Constructed grouping variable ids
Computed size of rRsum boundary vector: 1040
Pre-computed bin ranges for bootstrap resampling
Finished initializing wspc object
Imported fe_difference_ratio: 1.277575

Estimating model parameters: 
---------------

Running bootstrap fits (forking): 
Batch 0/50, 0.59971 sec/bs
Batch 1/50, 0.511189 sec/bs
Batch 2/50, 0.572947 sec/bs
Batch 3/50, 0.631256 sec/bs
Batch 4/50, 0.592981 sec/bs
Batch 5/50, 0.554433 sec/bs
Batch 6/50, 0.572891 sec/bs
Batch 7/50, 0.581102 sec/bs
Batch 8/50, 0.610778 sec/bs
Batch 9/50, 0.572657 sec/bs
Batch 10/50, 0.592829 sec/bs
Batch 11/50, 0.574841 sec/bs
Batch 12/50, 0.579588 sec/bs
Batch 13/50, 0.61824 sec/bs
Batch 14/50, 0.546117 sec/bs
Batch 15/50, 0.55792 sec/bs
Batch 16/50, 0.618448 sec/bs
Batch 17/50, 0.502622 sec/bs
Batch 18/50, 0.567314 sec/bs
Batch 19/50, 0.547656 sec/bs
Batch 20/50, 0.547383 sec/bs
Batch 21/50, 0.575944 sec/bs
Batch 22/50, 0.569212 sec/bs
Batch 23/50, 0.50501 sec/bs
Batch 24/50, 0.553453 sec/bs
Batch 25/50, 0.659709 sec/bs
Batch 26/50, 0.53795 sec/bs
Batch 27/50, 0.533777 sec/bs
Batch 28/50, 0.545512 sec/bs
Batch 29/50, 0.601295 sec/bs
Batch 30/50, 0.556041 sec/bs
Batch 31/50, 0.573641 sec/bs
Batch 32/50, 0.547238 sec/bs
Batch 33/50, 0.970462 sec/bs
Batch 34/50, 0.54825 sec/bs
Batch 35/50, 0.603083 sec/bs
Batch 36/50, 0.554796 sec/bs
Batch 37/50, 0.523055 sec/bs
Batch 38/50, 0.538141 sec/bs
Batch 39/50, 0.607493 sec/bs
Batch 40/50, 0.54849 sec/bs
Batch 41/50, 0.518577 sec/bs
Batch 42/50, 0.597861 sec/bs
Batch 43/50, 0.519225 sec/bs
Batch 44/50, 0.67305 sec/bs
Batch 45/50, 0.608756 sec/bs
Batch 46/50, 0.540774 sec/bs
Batch 47/50, 0.569528 sec/bs
Batch 48/50, 0.675826 sec/bs
Batch 49/50, 0.587759 sec/bs
All complete!

Setting full-data fit as parameters... 
Checking feasibility of provided parameters
Provided parameters are feasible

Running stats on bootstrap results: 
----------------------------------------

Grabbing bootstrap results, only resamples with converged fit... 
Grabbing parameter values... 
Computing 95% confidence intervals... 
Estimating p-values from bootstraped parameters... 

Stat summary (head only):
------------------------------
                              parameter    estimate      CI.low     CI.high
1       baseline_cortex_Rt_Arc_Tns/Blk1  9.83972836  7.28219965 10.64150022
2   beta_Rt_cortex_Arc_right_X_Tns/Blk1 -0.01029629 -0.05186548  0.04930917
3      beta_Rt_cortex_Arc_18_X_Tns/Blk1  0.05920120 -0.02044726  0.13127346
4 beta_Rt_cortex_Arc_right18_X_Tns/Blk1  0.02593683 -0.01294512  0.07387975
5       baseline_cortex_Rt_Arc_Tns/Blk2 12.19449905 11.58682820 16.88067225
6   beta_Rt_cortex_Arc_right_X_Tns/Blk2 -0.01450044 -0.05453399  0.02551439
     p.value p.value.adj    alpha.adj significance
1 0.00000000     0.00000 0.0001377410          ***
2 0.48348348    42.54655 0.0005681818           ns
3 0.01801802     4.36036 0.0002066116           ns
4 0.06706707    13.14515 0.0002551020           ns
5 0.00000000     0.00000 0.0001381215          ***
6 0.11011011    19.15916 0.0002873563           ns
----

Analyzing residuals: 
----------------------------------------

Computing residuals... 
Making masks... 
Making plots and saving stats... 

Log-residual summary by grouping variables (head only):
------------------------------
         group         mean        sd  variance
1          all  0.010155845 0.4498104 0.2023294
2 ran_lvl_none -0.044141467 0.3928228 0.1543097
3    ran_lvl_1  0.001217094 0.4712167 0.2220452
4    ran_lvl_2  0.023656399 0.4201992 0.1765674
5    ran_lvl_3  0.076007550 0.5251873 0.2758217
6    ran_lvl_4  0.048336959 0.4683529 0.2193545
----

TPS test results (head only):
------------------------------
              cortex   gene TPS.ref TPS.right TPS.18 TPS.right18 Rt.18
Arc.cortex    cortex    Arc   FALSE     FALSE  FALSE       FALSE  TRUE
Bcl11b.cortex cortex Bcl11b   FALSE     FALSE  FALSE       FALSE FALSE
Camk2a.cortex cortex Camk2a    TRUE     FALSE  FALSE       FALSE FALSE
Dlx2.cortex   cortex   Dlx2    TRUE      TRUE   TRUE        TRUE FALSE
Fezf2.cortex  cortex  Fezf2   FALSE     FALSE  FALSE       FALSE FALSE
Grin2a.cortex cortex Grin2a   FALSE     FALSE  FALSE       FALSE FALSE
              tpoint.18 tslope.18 Rt.right tpoint.right tslope.right Rt.right18
Arc.cortex         TRUE     FALSE    FALSE        FALSE        FALSE       TRUE
Bcl11b.cortex     FALSE     FALSE    FALSE        FALSE        FALSE      FALSE
Camk2a.cortex     FALSE      TRUE    FALSE        FALSE         TRUE      FALSE
Dlx2.cortex       FALSE      TRUE    FALSE        FALSE        FALSE      FALSE
Fezf2.cortex       TRUE     FALSE    FALSE         TRUE        FALSE      FALSE
Grin2a.cortex     FALSE      TRUE    FALSE        FALSE         TRUE      FALSE
              tpoint.right18 tslope.right18
Arc.cortex              TRUE          FALSE
Bcl11b.cortex          FALSE          FALSE
Camk2a.cortex          FALSE           TRUE
Dlx2.cortex            FALSE          FALSE
Fezf2.cortex           FALSE          FALSE
Grin2a.cortex          FALSE           TRUE
----

Printing structural summary distributions: 
----------------------------------------

Warping factors, beta distributions... 
Rate effects, Gaussian distribution... 
Slope effects, Gaussian distribution... 
tpoint effects, Gaussian distribution... 
Making rate-count plots... 

Printing child summary plots: 
----------------------------------------

Making summary plots for cortex: Arc, Bcl11b, Camk2a, Dlx2, Fezf2, Grin2a, Ncdn, Nptxr, Nr4a2, Rorb, Satb2[1] 2.718282
beta_shape_point  beta_shape_rate sd_tpoint_effect sd_tslope_effect 
     49.50571268      49.53184135       0.08219461       7.48452171 
$all
$all$plot_pred_parent_cortex_fixEff_Rorb


$points.obs
$points.obs$plot_pred_parent_cortex_fixEff_Rorb


$points.extrap
$points.extrap$plot_pred_parent_cortex_fixEff_Rorb


$lines
$lines$plot_pred_parent_cortex_fixEff_Rorb


$none
$none$plot_pred_parent_cortex_fixEff_Rorb


$`1`
$`1`$plot_pred_parent_cortex_fixEff_Rorb


$`2`
$`2`$plot_pred_parent_cortex_fixEff_Rorb


$`3`
$`3`$plot_pred_parent_cortex_fixEff_Rorb


$`4`
$`4`$plot_pred_parent_cortex_fixEff_Rorb


